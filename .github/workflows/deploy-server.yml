name: Deploy (Server App)

on: 
  workflow_run:
    workflows: 
    - "Build (Server)"
    types:
    - completed
    push:
      paths:
      - 'server/**'
      branches: [ main ]

jobs:
  deploy:
    name: Deploy Server App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY_SERVER: ${{ secrets.AWS_ECR_REPOSITORY_SERVER }}
        ECR_REPOSITORY_PROXY: ${{ secrets.AWS_ECR_REPOSITORY_PROXY }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_SERVER .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PROXY ./nginx
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_SERVER
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_PROXY

    - name: Update ECS Service with new deployment
      env:
        CLUSTER: ${{ secrets.AWS_ECS_CLUSTER }}
        SERVICE: ${{ secrets.AWS_ECS_SERVICE }}
      run: aws ecs update-service --cluster $CLUSTER --service $SERVICE --force-new-deployment
